package mz.co.fer.View;

import mz.co.fer.DAO.ProdutoDAO;
import mz.co.fer.DTO.Produto;
import mz.co.fer.DTO.ProdutoPromocao;
import mz.co.fer.Outros.Tables;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mz.co.fer.DAO.AuthorizedDAO;
import mz.co.fer.DTO.Authorized;
import mz.co.fer.enums.Operacao;

/**
 *
 * @author Deockilion
 */
public class FrmPromocao extends javax.swing.JDialog {
    private String supervisor;

    /**
     * Creates new form FrmPromocao
     *
     * @param parent
     * @param modal
     */
    public FrmPromocao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        listar();
        txtCodProd.requestFocus();
    }

    private void listar() {
        ProdutoDAO produtoDAO = new ProdutoDAO();
        List<String> produtosEmPromo = new ArrayList<>();
         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        for (ProdutoPromocao promo : produtoDAO.readPromoProd()) {
            Produto produto = produtoDAO.retornarProduto(promo.getCodigoProd());
            String descprod = produto.getDescricao() + " - " + promo.getDataFimPromocao().format(formatter);
            produtosEmPromo.add(descprod);
        }
        jListaProdsEmPromocao.setListData(produtosEmPromo.toArray(String[]::new));
    }

    private void aplicarPromocao(double desconto, int dias) {

        LocalDate dataInicio = LocalDate.now();
        LocalDate dataFim = dataInicio.plusDays(dias);
        

        DefaultTableModel modelo = (DefaultTableModel) jTpromocao.getModel();
        int rowCount = modelo.getRowCount();
        int rowIndex = -1;

        ProdutoDAO produtoDAO = new ProdutoDAO();
        Produto produto = null;
        double precoDaPromocao = 0;
        List<ProdutoPromocao> listaProdutos = new ArrayList<>();
        for (int i = 0; i < rowCount; i++) {
            int codigoNaTabela = (int) modelo.getValueAt(i, 0);
            produto = produtoDAO.retornarProduto(codigoNaTabela);
            double precoPromocao = produto.getPrecoVenda() * (desconto / 100);
            precoDaPromocao = produto.getPrecoVenda() - precoPromocao;

            if (produtoDAO.verificarSeEstaEmPromocao(codigoNaTabela)) {
                rowIndex = codigoNaTabela;
            }
            if (rowIndex != codigoNaTabela) {
                ProdutoPromocao promo = new ProdutoPromocao(codigoNaTabela, produto.getPrecoVenda(), precoDaPromocao, dataInicio, dataFim);
                listaProdutos.add(promo);
            }
        }
        produtoDAO.salvarPromocao(listaProdutos);
         // Atualizar produto no banco de dados
        produto.setPrecoVenda(precoDaPromocao);
        produtoDAO.update(produto, Operacao.PRECO_VENDA);
    }

    private void inserirProdTabela() {
        try {
            int codigoProduto = Integer.parseInt(txtCodProd.getText());
            boolean produtoExistente = false;

            ProdutoDAO produtoDAO = new ProdutoDAO();
            Produto produto = produtoDAO.retornarProduto(codigoProduto);
            DefaultTableModel modelo = (DefaultTableModel) jTpromocao.getModel();
            int rowCount = modelo.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                int codigoNaTabela = (int) modelo.getValueAt(i, 0);
                if (codigoNaTabela == codigoProduto) {
                    produtoExistente = true;
                    break;
                }
            }
            if (produtoExistente) {
                JOptionPane.showMessageDialog(this, "Produto já foi adicionado!", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                if (produto != null) {
                    modelo.addRow(new Object[]{
                        produto.getCodigo(),
                        produto.getDescricao(),
                        produto.getQtdLoja(),
                        produto.getPrecoVenda()
                    });
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código do produto inválido. Insira um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCoBoxDias = new javax.swing.JComboBox<>();
        jSlider1 = new javax.swing.JSlider();
        txtCodProd = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTpromocao = new javax.swing.JTable();
        jbtPromocao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListaProdsEmPromocao = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Promoção de Produtos");
        setModal(true);
        setResizable(false);

        jCoBoxDias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Dia", "7 Dias", "10 Dias", "15 Dias", "20 Dias", "30 Dias" }));

        jSlider1.setMinimum(1);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        txtCodProd.setToolTipText("Digite o código do produto");
        txtCodProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodProdActionPerformed(evt);
            }
        });

        jTpromocao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Quantidade", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTpromocao.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTpromocao);

        jbtPromocao.setText("Colocar em promoção");
        jbtPromocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPromocaoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jButton3.setText("Remover");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jListaProdsEmPromocao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(jListaProdsEmPromocao);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Periodo da Promoção:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Percentagem:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Lista de Produtos em Promoção");

        jbtDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jbtDelete.setText("Delete");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jCoBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtPromocao)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtDelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCoBoxDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtPromocao)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jbtDelete))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtPromocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPromocaoActionPerformed
        int desconto = jSlider1.getValue();
        String diasSelected = (String) jCoBoxDias.getSelectedItem();
        String[] partes = diasSelected.split("\\s+");
        int diasPromocao = Integer.parseInt(partes[0]);

        aplicarPromocao(desconto, diasPromocao);
        new Tables().limparTabela(jTpromocao);
        listar();
        ((FrmGestaoDeEstoque) getParent()).readJTable();
        Authorized au = new Authorized(supervisor, "PROMOÇÃO");
        AuthorizedDAO auDAO = new AuthorizedDAO();
        auDAO.save(au);
    }//GEN-LAST:event_jbtPromocaoActionPerformed

    private void txtCodProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodProdActionPerformed
        inserirProdTabela();
        txtCodProd.setText("");
    }//GEN-LAST:event_txtCodProdActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        jLabel1.setText(jSlider1.getValue() + "%");
    }//GEN-LAST:event_jSlider1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Tables().limparTabela(jTpromocao);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Tables().removerLinhaSelecionada(jTpromocao);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        int[] linhasSelected = jListaProdsEmPromocao.getSelectedIndices();

        if (linhasSelected.length > 0) {

            List<String> itensSelected = jListaProdsEmPromocao.getSelectedValuesList();
            for (String selected : itensSelected) {
                String[] array = selected.split(" -");

                ProdutoDAO produtoDAO = new ProdutoDAO();

                Produto produto = produtoDAO.procurarProdutoPeloCodigo(array[0]);

                ProdutoPromocao prodsEmPromo = produtoDAO.procurarProdutoPromocao(produto.getCodigo());

                produto.setPrecoVenda(prodsEmPromo.getPrecoNormal());
                produtoDAO.update(produto, Operacao.PRECO_VENDA);

                produtoDAO.deletePromocaoProd(prodsEmPromo);

            }
            listar();
            ((FrmGestaoDeEstoque) getParent()).readJTable();

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto na lista!");
        }
    }//GEN-LAST:event_jbtDeleteActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jCoBoxDias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListaProdsEmPromocao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTpromocao;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtPromocao;
    private javax.swing.JTextField txtCodProd;
    // End of variables declaration//GEN-END:variables

    /**
     * @param supervisor the supervisor to set
     */
    public void setSupervisor(String supervisor) {
        this.supervisor = supervisor;
    }
}
