package mz.co.fer.View;

import mz.co.fer.DAO.CarrinhoDeCompras;
import mz.co.fer.DAO.CustomerDAO;
import mz.co.fer.DAO.VendasDAO;
import mz.co.fer.DTO.CustomerVD;
import mz.co.fer.DTO.Produto;
import mz.co.fer.DTO.Vendas;
import mz.co.fer.Outros.Tables;
import mz.co.fer.Relatorios.GerarPDF;
import com.itextpdf.text.DocumentException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import mz.co.fer.enums.Operacao;

/**
 *
 * @author Deockilion
 */
public class FrmQuote extends javax.swing.JDialog {

    private final JTable jTProdutos;
    private Operacao operacao;

    /**
     * Creates new form ViewQuote
     *
     * @param parent
     * @param modal
     */
    public FrmQuote(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(654, 369);
        setLocationRelativeTo(null);
        this.jTProdutos = new JTable();
        listar();
        txtNuit.setEnabled(false);
        txtEmpresa.setEnabled(false);
        txtEndereco.setEnabled(false);
        jbtSalvar.setEnabled(false);

    }

    public void setTabelaProdutos(DefaultTableModel tabelaProdutos) {
        jTProdutos.setModel(tabelaProdutos);
    }

    private void listar() {
        CustomerDAO cusDAO = new CustomerDAO();
        List<String> empresasStringList = new ArrayList<>();
        for (CustomerVD cusVd : cusDAO.read()) {
            String campanyString = cusVd.getEmpresa();
            empresasStringList.add(campanyString);
        }
        jListEmpresas.setListData(empresasStringList.toArray(String[]::new));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        jbtImprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNuit = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEmpresas = new javax.swing.JList<>();
        txtPesquisar = new javax.swing.JTextField();
        jbtProcurar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jbtNovo = new javax.swing.JButton();
        txtVD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbtDelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quote&VD");
        setModal(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setText("Empresa/Cliente:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(12, 80, 90, 16);

        jLabel2.setText("NUIT:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(73, 126, 29, 16);

        txtEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpresaActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmpresa);
        txtEmpresa.setBounds(120, 77, 141, 22);

        jbtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print-16.png"))); // NOI18N
        jbtImprimir.setText("Imprimir");
        jbtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(jbtImprimir);
        jbtImprimir.setBounds(310, 250, 99, 25);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Cotação/VD");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 7, 102, 25);

        txtNuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNuitActionPerformed(evt);
            }
        });
        getContentPane().add(txtNuit);
        txtNuit.setBounds(120, 123, 141, 22);

        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });
        getContentPane().add(txtEndereco);
        txtEndereco.setBounds(120, 163, 141, 22);

        jLabel4.setText("Endereço:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 169, 52, 16);

        jListEmpresas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(jListEmpresas);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(304, 112, 223, 130);

        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(txtPesquisar);
        txtPesquisar.setBounds(304, 77, 223, 22);

        jbtProcurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-16.png"))); // NOI18N
        jbtProcurar.setText("Pesquisar");
        jbtProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProcurarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtProcurar);
        jbtProcurar.setBounds(539, 74, 103, 25);

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/salvar.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(jbtSalvar);
        jbtSalvar.setBounds(161, 192, 100, 25);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(269, 0, 28, 369);

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/novo-foco.png"))); // NOI18N
        jbtNovo.setText("NOVO");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jbtNovo);
        jbtNovo.setBounds(12, 45, 100, 25);

        txtVD.setToolTipText("Digite o ID do recibo.");
        txtVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVDActionPerformed(evt);
            }
        });
        getContentPane().add(txtVD);
        txtVD.setBounds(330, 37, 120, 22);

        jLabel5.setText("ID:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(302, 40, 20, 16);

        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(461, 37, 150, 22);

        jbtDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jbtDelete.setText("Delete");
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jbtDelete);
        jbtDelete.setBounds(420, 250, 100, 25);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/quote.jpg"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(-4, 0, 654, 370);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtImprimirActionPerformed
        if (operacao == Operacao.QUOTE) {
            String nomeEmpresa = jListEmpresas.getSelectedValue();
            DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
            try {
                int rowCount = modelo.getRowCount();
                if (rowCount != 0) {
                    CustomerDAO cusDAO = new CustomerDAO();
                    if (!jListEmpresas.isSelectionEmpty()) {
                        boolean cotacaoNegativa = false;
                        CustomerVD customer = cusDAO.retornar(nomeEmpresa);
                        for (Produto p : Tables.getProdutosFromTable(modelo)) {
                            if (p.getQtdArmazem() < 0 && p.getSubtotal() < 0) {
                                cotacaoNegativa = true;
                                break;
                            }
                        }
                        if (cotacaoNegativa) {
                            JOptionPane.showMessageDialog(this, "Não pode imprimir a cotação com valores negativos", "Erro", JOptionPane.ERROR_MESSAGE);

                        } else {
                            CarrinhoDeCompras fatura = new CarrinhoDeCompras();
                            fatura.salvarCarrinho(Tables.getProdutosFromTable(modelo));
                            new GerarPDF().gerarCotacao(modelo, customer, fatura.getNumeroDoCarrinho());
                            new Tables().limparTabela(jTProdutos);
                            ((FrmCaixa) getParent()).setarJLabels();
                            txtEmpresa.setText("");
                            txtNuit.setText("");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Selecione uma empresa na lista!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } catch (DocumentException | FileNotFoundException ex) {
                Logger.getLogger(FrmGestaoDeEstoque.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FrmCaixa.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex);
            }
        } else if (operacao == Operacao.VD) {
            String idDaVenda = txtVD.getText();
            VendasDAO prodvenddao = new VendasDAO();
            String cliente = jListEmpresas.getSelectedValue();

            if (idDaVenda != null) {
                try {
                    Vendas venda = prodvenddao.lerVendaPorIdRecibo(idDaVenda);
                    if (venda != null) {
                        jLabel6.setText("OK!");
                        List<Produto> produtos = venda.getProdutosVendidos();
                        String[] columnNames = {"Codigo", "Descricao", "Quantidade", "Preco", "Subtotal"};
                        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

                        for (Produto produto : produtos) {
                            Object[] rowData = {produto.getCodigo(), produto.getDescricao(), produto.getQtdArmazem(), produto.getPreco(), produto.getSubtotal()};
                            tableModel.addRow(rowData);
                        }
                        CustomerDAO cusDAO = new CustomerDAO();
                        CustomerVD customer = cusDAO.retornar(cliente);

                        try {
                            if (customer != null) {
                                new GerarPDF().imprimirVD(venda.getDataVenda(), venda.getOperador(), customer, tableModel, venda.getIdRecibo());
                                txtVD.setText("");
                            } else {
                                JOptionPane.showMessageDialog(this, "Selecione uma empresa na lista!", "Atenção", JOptionPane.WARNING_MESSAGE);
                            }
                        } catch (DocumentException | FileNotFoundException ex) {
                            Logger.getLogger(FrmCaixa.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(FrmCaixa.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "O ID informado não existe!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "ID do recibo inválido. Insira um número válido!");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Não introduziu nenhum ID", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_jbtImprimirActionPerformed

    private void txtEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpresaActionPerformed
        txtNuit.requestFocus();
    }//GEN-LAST:event_txtEmpresaActionPerformed

    private void txtNuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNuitActionPerformed
        txtEndereco.requestFocus();
    }//GEN-LAST:event_txtNuitActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
        try {
            String empresa = txtEmpresa.getText();
            String endereco = txtEndereco.getText();
            String nuit = txtNuit.getText();
            if (!empresa.isEmpty()) {

                CustomerDAO custDao = new CustomerDAO();
                CustomerVD cusvd = new CustomerVD();
                CustomerVD customer = custDao.retornar(empresa);
                if (customer == null) {
                    cusvd.setEmpresa(empresa);
                    cusvd.setNuit(nuit.trim().isEmpty() ? 0 : Integer.parseInt(txtNuit.getText()));
                    cusvd.setEndereco(endereco.trim().isEmpty() ? "-" : endereco);
                    custDao.save(cusvd);
                    txtEndereco.setText("");
                    txtEmpresa.setText("");
                    txtNuit.setText("");
                    listar();
                }else{
                    JOptionPane.showMessageDialog(this, "O nome da empresa/cliente já existe!", "Atenção", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "O nome da empresa ou cliente nao pode estar vazio!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        txtNuit.setEnabled(true);
        txtEmpresa.setEnabled(true);
        txtEndereco.setEnabled(true);
        jbtSalvar.setEnabled(true);
        txtEmpresa.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProcurarActionPerformed
        String pesquisa = txtPesquisar.getText();
        CustomerDAO cusDAO = new CustomerDAO();
        CustomerVD customer = cusDAO.retornar(pesquisa);
        List<String> empresasStringList = new ArrayList<>();
        if (customer != null) {
            String campanyString = customer.getEmpresa();
            empresasStringList.add(campanyString);
            jListEmpresas.setListData(empresasStringList.toArray(String[]::new));
        }
    }//GEN-LAST:event_jbtProcurarActionPerformed

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        jbtProcurarActionPerformed(evt);
    }//GEN-LAST:event_txtPesquisarActionPerformed

    private void txtVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVDActionPerformed
        String id = txtVD.getText();
        VendasDAO prodvenddao = new VendasDAO();

        if (id != null) {
            Vendas venda = prodvenddao.lerVendaPorIdRecibo(id);
            if (venda != null) {
                jLabel6.setText("OK!");

            } else {
                jLabel6.setText("ID do recibo não existe!");
                JOptionPane.showMessageDialog(this, "O ID informado não existe!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtVD.setText("");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Não introduziu nenhum ID", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_txtVDActionPerformed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        jbtSalvarActionPerformed(evt);
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        int[] linhasSelected = jListEmpresas.getSelectedIndices();

        if (linhasSelected.length > 0) {
            List<String> itensSelected = jListEmpresas.getSelectedValuesList();
            for (String selected : itensSelected) {
                CustomerDAO cusDAO = new CustomerDAO();
                CustomerVD customer = new CustomerVD();
                customer.setEmpresa(selected);
                cusDAO.Delete(customer);
            }
            listar();
        }
    }//GEN-LAST:event_jbtDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jListEmpresas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtImprimir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtProcurar;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNuit;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtVD;
    // End of variables declaration//GEN-END:variables

    /**
     * @param operacao the operacao to set
     */
    public void setOperacao(Operacao operacao) {
        this.operacao = operacao;
        if (operacao == Operacao.QUOTE) {
            txtVD.setEnabled(false);
        } else if (operacao == Operacao.VD) {
            txtVD.requestFocus();
            txtVD.setEnabled(true);
        }
    }
}
