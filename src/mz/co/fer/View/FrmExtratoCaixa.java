package mz.co.fer.View;

import java.text.SimpleDateFormat;
import mz.co.fer.DAO.ContabilidadeDAO;
import mz.co.fer.DTO.Caixa;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JOptionPane;
import mz.co.fer.enums.Operacao;

/**
 *
 * @author Deockilion
 */
public class FrmExtratoCaixa extends javax.swing.JDialog {

    private String nome;
    private double total;
    private Operacao operacao;

    /**
     * Creates new form ValoresCaixa
     *
     * @param parent
     * @param modal
     */
    public FrmExtratoCaixa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        jCoBoxInfo.setEnabled(false);
        jButton1.setEnabled(false);
        jbtVer.setEnabled(false);
    }

    public void nomeFun(String nome, double total) {
        this.nome = nome;
        this.total = total;
    }

    private void inicializarComboBox() {
        ContabilidadeDAO contDAO = new ContabilidadeDAO();
        for (Caixa caixa : contDAO.lerCaixa()) {
            jCoBoxInfo.addItem(caixa.getNome() + " - " + caixa.getData());
        }
    }

    private void textPanel(String nome, Caixa c) {
        StringBuilder content = new StringBuilder();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        content.append("-----------------------------------\n");
        content.append("Data: ").append(dateFormat.format(c.getData())).append("\n");
        content.append("Nome do Caixa: ").append(nome).append("\n");
        if (operacao == Operacao.EXTRATOAtual) {
            content.append("Total Vendido: ").append(total).append("MT\n");
        }
        content.append("-----------------------------------\n");
        content.append("|     Hora   |  CASH  | CARD |\n");
        double totalcash = 0;
        double totalcard = 0;
        for (Caixa caixa : c.getValores()) {
            content.append(String.format("| %-5s | %-7.2f | %-7.2f |", caixa.getHora(), caixa.getCash(), caixa.getCard())).append("\n");
            totalcash += caixa.getCash();
            totalcard += caixa.getCard();
        }
        content.append("----------------------------------\n");
        content.append("Total da Venda Numérario: ").append(totalcash).append("MT\n");
        content.append("Total da Venda Cartão: ").append(totalcard).append("MT\n");
        if (operacao == Operacao.EXTRATOAntigo) {
            content.append("Total Vendido: ").append(totalcash + totalcard).append("MT\n");
        }
        content.append("----------------------------------\n");

        jTextPane1.setText(content.toString());

    }

    public void desbloquearBotoes(boolean n, boolean m) {
        if (operacao == Operacao.EXTRATOAtual) {
            jbtVer.setEnabled(n);
            jCoBoxInfo.setEnabled(m);
            jButton1.setEnabled(m);
        } else if (operacao == Operacao.EXTRATOAntigo) {
            inicializarComboBox();
            jCoBoxInfo.setEnabled(m);
            jButton1.setEnabled(m);
            jbtVer.setEnabled(n);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jbtprint = new javax.swing.JButton();
        jbtVer = new javax.swing.JButton();
        jCoBoxInfo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Extrato das Vendas");
        setModal(true);
        setResizable(false);

        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextPane1.setFocusable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jbtprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print-16.png"))); // NOI18N
        jbtprint.setText("Imprimir");
        jbtprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtprintActionPerformed(evt);
            }
        });

        jbtVer.setText("Visualizar");
        jbtVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVerActionPerformed(evt);
            }
        });

        jCoBoxInfo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtVer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtprint)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jCoBoxInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCoBoxInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtprint)
                    .addComponent(jbtVer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVerActionPerformed
        ContabilidadeDAO countDAO = new ContabilidadeDAO();
        Caixa c = countDAO.lerValoresVenda(nome);
        textPanel(nome, c);

    }//GEN-LAST:event_jbtVerActionPerformed

    private void jbtprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtprintActionPerformed
        try {
            String conteudo = jTextPane1.getText();
            PrintService defaultPrintService = PrintServiceLookup.lookupDefaultPrintService();
            DocPrintJob job = defaultPrintService.createPrintJob();
            SimpleDoc doc = new SimpleDoc(conteudo.getBytes(), DocFlavor.BYTE_ARRAY.AUTOSENSE, null);
            job.print(doc, null);
        } catch (PrintException ex) {
            Logger.getLogger(FrmExtratoCaixa.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro ao tentar imprimir: " + ex.getMessage());
        }
    }//GEN-LAST:event_jbtprintActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nomeEdata = (String) jCoBoxInfo.getSelectedItem();
        String[] dados = nomeEdata.split(" - ");
        ContabilidadeDAO countDAO = new ContabilidadeDAO();
        Caixa c = countDAO.lerValoresVendaAntigo(dados[0], dados[1]);
        textPanel(dados[0], c);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCoBoxInfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton jbtVer;
    private javax.swing.JButton jbtprint;
    // End of variables declaration//GEN-END:variables

    /**
     * @param operacao the operacao to set
     */
    public void setOperacao(Operacao operacao) {
        this.operacao = operacao;
    }
}
