package mz.co.fer.View;

import mz.co.fer.DAO.ProdutoDAO;
import mz.co.fer.DTO.AuthService;
import mz.co.fer.DTO.Produto;
import mz.co.fer.DTO.ProdutoPromocao;
import mz.co.fer.Relatorios.GerarPDF;
import mz.co.fer.Outros.Tables;
import com.itextpdf.text.DocumentException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import mz.co.fer.enums.Operacao;

/**
 *
 *
 * @author Fernando
 */
public class FrmGestaoDeEstoque extends javax.swing.JFrame {

    private ProdutoDAO produtoDAO = new ProdutoDAO();
    private Produto produto;

    public FrmGestaoDeEstoque() {
        initComponents();
        jLUserLogado.setText(AuthService.getCurrentUser());
        readJTable();
        this.setExtendedState(MAXIMIZED_BOTH);
        verificarPromo();
    }

    private void inserirProdTabela() {
        try {
            int codigoProduto = Integer.parseInt(jtfCod.getText());
            boolean produtoExistente = false;

            produto = produtoDAO.retornarProduto(codigoProduto);
            DefaultTableModel modelo = (DefaultTableModel) jTprodImprimir.getModel();
            int rowCount = modelo.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                int codigoNaTabela = (int) modelo.getValueAt(i, 0);
                if (codigoNaTabela == codigoProduto) {
                    produtoExistente = true;
                    break;
                }
            }
            if (produtoExistente) {
                JOptionPane.showMessageDialog(this, "Produto já foi adicionado!");
            } else {
                if (produto != null) {
                    modelo.addRow(new Object[]{
                        produto.getCodigo(),
                        produto.getDescricao(),
                        produto.getQtdLoja(),
                        produto.getQtdArmazem(),
                        produto.getPrecoVenda()
                    });
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código do produto inválido. Insira um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public static boolean isPromocaoValida(ProdutoPromocao produto) {
        LocalDate dataAtual = LocalDate.now();
        // Verificando se a data atual está entre as datas de início e fim da promoção
        return (dataAtual.isAfter(produto.getDataInicioPromocao()) || dataAtual.isEqual(produto.getDataInicioPromocao()))
                && (dataAtual.isBefore(produto.getDataFimPromocao()) || dataAtual.isEqual(produto.getDataFimPromocao()));
    }

    public static void verificarPromo() {
        ProdutoDAO produtoDAO = new ProdutoDAO();

        for (ProdutoPromocao prodsEmPromo : produtoDAO.readPromoProd()) {
            if (isPromocaoValida(prodsEmPromo)) {
                // O produto ainda está em promoção.
                //System.out.println("O produto ainda está em promoção");
            } else {
                //System.out.println("A promoção do produto expirou.");
                Produto produto = produtoDAO.retornarProduto(prodsEmPromo.getCodigoProd());
                // A promoção do produto expirou.
                produto.setPrecoVenda(prodsEmPromo.getPrecoNormal());
                produtoDAO.update(produto, Operacao.PRECO_VENDA);
                produtoDAO.deletePromocaoProd(prodsEmPromo);
            }
        }
    }

    private byte[] getBytesFromBufferedImage(BufferedImage image) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            String[] formatos = {"jpg", "png", "jpeg2000"};

            for (String formato : formatos) {
                ImageIO.write(image, formato, baos);
            }
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        return baos.toByteArray();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtCadastrar = new javax.swing.JButton();
        txtDesc = new javax.swing.JTextField();
        txtCodProd = new javax.swing.JTextField();
        txtQtd = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        txtProcurarCodProd = new javax.swing.JButton();
        txtProcurar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTProdutos = new javax.swing.JTable();
        jbtExcluir = new javax.swing.JButton();
        jLUserLogado = new javax.swing.JLabel();
        jbtAlterarPreco = new javax.swing.JButton();
        jbtAddQtd = new javax.swing.JButton();
        jbtAlDesc = new javax.swing.JButton();
        jbtTransfer = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtPrecoVenda = new javax.swing.JTextField();
        jLimage = new javax.swing.JLabel();
        jbtSetImage = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jCoBoxProdType = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTprodPrecos = new javax.swing.JTable();
        jtfCodPrice = new javax.swing.JTextField();
        jbtprintPreco = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTprodImprimir = new javax.swing.JTable();
        jtfCod = new javax.swing.JTextField();
        jbtPrintProd = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestão de Estoque");
        setIconImages(null);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Descrição:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Código do Produto:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Quantidade:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Preço de Compra:");

        jbtCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/salvar.png"))); // NOI18N
        jbtCadastrar.setText("Cadastrar");
        jbtCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCadastrarActionPerformed(evt);
            }
        });

        txtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescActionPerformed(evt);
            }
        });

        txtCodProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodProdActionPerformed(evt);
            }
        });

        txtQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdActionPerformed(evt);
            }
        });

        txtPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoActionPerformed(evt);
            }
        });

        txtProcurarCodProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-16.png"))); // NOI18N
        txtProcurarCodProd.setText("Pesquisar");
        txtProcurarCodProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcurarCodProdActionPerformed(evt);
            }
        });

        txtProcurar.setToolTipText("Introduza o codigo do produto a pesquisar");
        txtProcurar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProcurarKeyPressed(evt);
            }
        });

        jTProdutos.setBackground(new java.awt.Color(153, 153, 153));
        jTProdutos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Stock Loja", "Stock Armazem", "Preço de Compra Unit.", "Preço de Venda Unit."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTProdutos.getTableHeader().setReorderingAllowed(false);
        jTProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProdutosMouseClicked(evt);
            }
        });
        jTProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTProdutosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTProdutos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jbtExcluir.setText("Eliminar");
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jLUserLogado.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jbtAlterarPreco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit-16.png"))); // NOI18N
        jbtAlterarPreco.setText("Alterar Preço");
        jbtAlterarPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAlterarPrecoActionPerformed(evt);
            }
        });

        jbtAddQtd.setText("Adicionar Quantidade");
        jbtAddQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddQtdActionPerformed(evt);
            }
        });

        jbtAlDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit-16.png"))); // NOI18N
        jbtAlDesc.setText("Alterar Descrição");
        jbtAlDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAlDescActionPerformed(evt);
            }
        });

        jbtTransfer.setText("Transferir");
        jbtTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTransferActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Preço de Venda:");

        txtPrecoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoVendaActionPerformed(evt);
            }
        });

        jbtSetImage.setText("Add Image");
        jbtSetImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSetImageActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Tipo de Produto:");

        jCoBoxProdType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UNIDADE", "PESO" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtProcurarCodProd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(54, 54, 54)
                                .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(44, 44, 44)
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(13, 13, 13)
                                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(21, 21, 21)
                                .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLimage, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtCadastrar)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jCoBoxProdType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtExcluir)
                                .addGap(7, 7, 7)
                                .addComponent(jbtAlterarPreco)
                                .addGap(12, 12, 12)
                                .addComponent(jbtAddQtd)
                                .addGap(7, 7, 7)
                                .addComponent(jbtAlDesc))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbtTransfer)
                                .addGap(12, 12, 12)
                                .addComponent(jbtSetImage))))
                    .addComponent(jLUserLogado, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtProcurarCodProd))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1))
                            .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel3))
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel5))
                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jCoBoxProdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLimage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtExcluir)
                            .addComponent(jbtAlterarPreco)
                            .addComponent(jbtAddQtd)
                            .addComponent(jbtAlDesc))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtTransfer)
                            .addComponent(jbtSetImage))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLUserLogado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Produtos", jPanel1);

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprimir Preços", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jTprodPrecos.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTprodPrecos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Quantidade", "Preço Unit."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTprodPrecos);

        jtfCodPrice.setToolTipText("Introduza o codigo do produto");
        jtfCodPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodPriceKeyPressed(evt);
            }
        });

        jbtprintPreco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print-16.png"))); // NOI18N
        jbtprintPreco.setText("Imprimir");
        jbtprintPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtprintPrecoActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jButton4.setText("Remover");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Limpar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jtfCodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtprintPreco)))
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtprintPreco)
                        .addComponent(jButton4)
                        .addComponent(jButton5))
                    .addComponent(jtfCodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imprimir Lista de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jTprodImprimir.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTprodImprimir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Stock Loja", "Stock Armazem ", "Preço Unit."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTprodImprimir);

        jtfCod.setToolTipText("Introduza o codigo do produto");
        jtfCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodKeyPressed(evt);
            }
        });

        jbtPrintProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print-16.png"))); // NOI18N
        jbtPrintProd.setText("Imprimir");
        jbtPrintProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPrintProdActionPerformed(evt);
            }
        });

        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove-16.png"))); // NOI18N
        jButton3.setText("Remover");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jtfCod, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtPrintProd)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtPrintProd)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(139, 139, 139))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Imprimir", jPanel3);

        jMenu1.setText("File");

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem9.setText("Requisição");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItem10.setText("Promoção");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem8.setText("Sair");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Atalhos");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F10, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit-16.png"))); // NOI18N
        jMenuItem1.setText("Set Descrição");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit-16.png"))); // NOI18N
        jMenuItem2.setText("Set Preço");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem11.setText("Set Código");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("Set Type Product");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem3.setText("Add Image");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/refresh-16.png"))); // NOI18N
        jMenuItem4.setText("Refresh Table");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem5.setText("Transferir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem6.setText("Add Quantidade");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print-16.png"))); // NOI18N
        jMenuItem7.setText("Imprimir");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoActionPerformed
        txtPrecoVenda.requestFocus();
    }//GEN-LAST:event_txtPrecoActionPerformed

    private void jbtCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCadastrarActionPerformed
        String codigo = txtCodProd.getText();
        String descricao = txtDesc.getText();
        String quantidade = txtQtd.getText();
        String preco = txtPreco.getText();
        String precoVenda = txtPrecoVenda.getText();
        if (descricao.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha a descrição do produto!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                double quantidadeInt = Double.parseDouble(quantidade);

                if (quantidadeInt < 0) {
                    JOptionPane.showMessageDialog(this, "A quantidade não pode ser negativa!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    txtQtd.setText("");
                } else {
                    ProdutoDAO dao = new ProdutoDAO();
                    produto = new Produto();
                    produto.setCodigo(Integer.parseInt(codigo));
                    produto.setDescricao(descricao.toUpperCase());
                    produto.setQtdArmazem(quantidadeInt);
                    produto.setPreco(Double.parseDouble(preco));
                    produto.setPrecoVenda(Double.parseDouble(precoVenda));
                    produto.setType((String) jCoBoxProdType.getSelectedItem());

                    // Verifica se o código já existe no banco de dados
                    Produto produtoExistente = dao.procurarProdutoPeloCodigo(codigo);
                    if (produtoExistente != null) {
                        JOptionPane.showMessageDialog(this, "O código do produto já existe.", "Atenção", JOptionPane.ERROR_MESSAGE);
                        txtCodProd.setText("");
                    } else {
                        dao.create(produto);
                        readJTable();
                        txtCodProd.setText("");
                        txtDesc.setText("");
                        txtQtd.setText("");
                        txtPreco.setText("");
                        txtPrecoVenda.setText("");
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Código do produto inválido. Insira um número válido!", "Erro", JOptionPane.ERROR_MESSAGE);
                txtCodProd.setText("");
                txtQtd.setText("");
                txtPreco.setText("");
                txtPrecoVenda.setText("");
            }

        }
    }//GEN-LAST:event_jbtCadastrarActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            Produto p = new Produto();
            double qtd = (double) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 3);
            double qtdloja = (double) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 2);

            if (qtd != 0 || qtdloja != 0) {
                JOptionPane.showMessageDialog(this, "A quantidade desse produto existe e não pode ser eliminado!");
            } else {
                ProdutoDAO dao = new ProdutoDAO();

                p.setId((int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0));

                dao.delete(p);

                readJTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um produto para eliminar.");
        }
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void txtProcurarCodProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcurarCodProdActionPerformed
        readJTableForCod(txtProcurar.getText());
    }//GEN-LAST:event_txtProcurarCodProdActionPerformed

    private void jTProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProdutosMouseClicked
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            produto = produtoDAO.retornarProduto(codProdSelecionado);
            if (produto.getImagem() != null) {
                jLimage.setIcon(new ImageIcon(produto.getImagem()));
            }
        }

    }//GEN-LAST:event_jTProdutosMouseClicked

    private void jTProdutosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProdutosKeyReleased
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            produto = produtoDAO.retornarProduto(codProdSelecionado);
            if (produto.getImagem() != null) {
                jLimage.setIcon(new ImageIcon(produto.getImagem()));
            }
        }
    }//GEN-LAST:event_jTProdutosKeyReleased

    private void jbtAlterarPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAlterarPrecoActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);

            String novoPreco = JOptionPane.showInputDialog(this, "Introduza o novo preço:", "Informação", JOptionPane.PLAIN_MESSAGE);

            ProdutoDAO prodDao = new ProdutoDAO();
            produto = prodDao.retornarProduto(codProdSelecionado);
            try {
                if (produto != null) {
                    produto.setPrecoVenda(Double.parseDouble(novoPreco));
                    FrmAuthentic au = new FrmAuthentic(this, true);
                    au.setOperacao(Operacao.CHANGEPRICE);
                    au.setProduto(produto);
                    au.setVisible(true);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Preço inválido. Insira um número válido!", "Informação", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para alterar o preco.");
        }
    }//GEN-LAST:event_jbtAlterarPrecoActionPerformed

    private void jbtAddQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddQtdActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            double qtdAnterior = (double) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 3);

            String novaQtd = JOptionPane.showInputDialog(this, "Introduza a nova quantidade:", "Informação", JOptionPane.PLAIN_MESSAGE);

            ProdutoDAO prodDao = new ProdutoDAO();
            produto = prodDao.retornarProduto(codProdSelecionado);
            if (produto != null) {
                try {
                    double novaQtdDouble = Double.parseDouble(novaQtd);
                    if (novaQtdDouble < 0) {
                        JOptionPane.showMessageDialog(this, "A quantidade não pode ser negativa!");
                    } else {
                        if (produto.getType().equals("UNIDADE") && novaQtdDouble != Math.floor(novaQtdDouble)) {
                            JOptionPane.showMessageDialog(this, "Este produto é por unidade, insira um valor inteiro.");
                        } else {
                            produto.setQtdArmazem(produto.getQtdArmazem() + novaQtdDouble);
                            FrmAuthentic au = new FrmAuthentic(this, true);
                            au.setOperacao(Operacao.ADDQTD);
                            au.setQtdAnterior(qtdAnterior);
                            au.setQtdAtual(qtdAnterior + novaQtdDouble);
                            au.setProduto(produto);
                            au.setVisible(true);
                        }
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Quantidade inválida. Insira um número válido", "Informação", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para adicionar a quantidade.");
        }
    }//GEN-LAST:event_jbtAddQtdActionPerformed

    private void jbtAlDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAlDescActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            String novaDescricao = JOptionPane.showInputDialog(this, "Introduza a nova Descrição do produto:", "Informação", JOptionPane.PLAIN_MESSAGE);

            if (novaDescricao != null && !novaDescricao.isEmpty()) {
                ProdutoDAO prodDao = new ProdutoDAO();
                produto = prodDao.retornarProduto(codProdSelecionado);
                if (produto != null) {
                    produto.setDescricao(novaDescricao.toUpperCase());
                    FrmAuthentic au = new FrmAuthentic(this, true);
                    au.setOperacao(Operacao.DESCRICAOP);
                    au.setProduto(produto);
                    au.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, introduza a nova descricao do produto!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para alterar a Descrição.");
        }
    }//GEN-LAST:event_jbtAlDescActionPerformed

    private void jbtTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTransferActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            double qtdAnterior = (double) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 3);
            System.out.println(qtdAnterior);
            String qtdParaLoja = JOptionPane.showInputDialog(this, "Introduza a quantidade a ser transferida:", "Informação", JOptionPane.PLAIN_MESSAGE);

            ProdutoDAO prodDao = new ProdutoDAO();
            produto = prodDao.retornarProduto(codProdSelecionado);
            try {
                double novaQtdDouble = Double.parseDouble(qtdParaLoja);
                if (novaQtdDouble > produto.getQtdArmazem()) {
                    JOptionPane.showMessageDialog(this, "A quantidade a ser transferida é maior que a quantidade disponível no estoque do armazem.");

                } else if (novaQtdDouble < 0) {
                    JOptionPane.showMessageDialog(this, "A quantidade a ser transferida não pode ser negativa.", "Atenção", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (produto.getType().equals("UNIDADE") && novaQtdDouble != Math.floor(novaQtdDouble)) {
                        JOptionPane.showMessageDialog(this, "Este produto é por unidade, insira um valor inteiro.");
                    } else {

                        produto.setQtdArmazem(produto.getQtdArmazem() - novaQtdDouble);
                        produto.setQtdLoja(produto.getQtdLoja() + novaQtdDouble);
                        FrmAuthentic au = new FrmAuthentic(this, true);
                        au.setOperacao(Operacao.TRANSFERIR);
                        au.setQtdAnterior(qtdAnterior);
                        au.setQtdAtual(qtdAnterior - novaQtdDouble);
                        au.setProduto(produto);
                        au.setVisible(true);
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Quantidade inválida. Insira um número válido", "Informação", JOptionPane.WARNING_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para transferir a quantidade.");
        }
    }//GEN-LAST:event_jbtTransferActionPerformed

    private void jtfCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            inserirProdTabela();
            jtfCod.setText("");
        }
    }//GEN-LAST:event_jtfCodKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Tables().limparTabela(jTprodImprimir);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Tables().removerLinhaSelecionada(jTprodImprimir);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jtfCodPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodPriceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                String qtd = JOptionPane.showInputDialog(null, "Introduza a quantidade", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
                int quant = Integer.parseInt(qtd);

                if (quant < 0) {
                    JOptionPane.showMessageDialog(this, "Introduza um valor positivo!");
                } else {
                    inserirProdTabelaPrecos(quant);
                }
                jtfCodPrice.setText("");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Código do produto inválido. Insira um número válido!");
            }
        }
    }//GEN-LAST:event_jtfCodPriceKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new Tables().removerLinhaSelecionada(jTprodPrecos);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new Tables().limparTabela(jTprodPrecos);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jbtPrintProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPrintProdActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTprodImprimir.getModel();
        int count = jTprodImprimir.getRowCount();
        try {
            if (count == 0) {
                JOptionPane.showMessageDialog(this, "Nenhum produto na tabela para impressão!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                new GerarPDF().imprimirProdutos(modelo);
            }
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(FrmGestaoDeEstoque.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmGestaoDeEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtPrintProdActionPerformed

    private void jbtprintPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtprintPrecoActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTprodPrecos.getModel();
        try {
            new GerarPDF().printPrices(modelo);

        } catch (DocumentException | IOException ex) {
            Logger.getLogger(FrmGestaoDeEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtprintPrecoActionPerformed

    private void txtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescActionPerformed
        txtQtd.requestFocus();
    }//GEN-LAST:event_txtDescActionPerformed

    private void txtQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdActionPerformed
        txtPreco.requestFocus();
    }//GEN-LAST:event_txtQtdActionPerformed

    private void txtProcurarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ActionEvent evtt = null;
            txtProcurarCodProdActionPerformed(evtt);
        }
    }//GEN-LAST:event_txtProcurarKeyPressed

    private void txtCodProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodProdActionPerformed
        txtDesc.requestFocus();
    }//GEN-LAST:event_txtCodProdActionPerformed

    private void jbtSetImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSetImageActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            JFileChooser chooser = new JFileChooser();
            chooser.setDialogTitle("Procurar arquivo");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagem", "JPG", "JPEG", "png");
            chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(this);

            // Se a imagem foi selecionada
            byte[] imageBytes = null;

            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                try {
                    File file = chooser.getSelectedFile();

                    // Converter imagem para bytes
                    BufferedImage image = ImageIO.read(file);

                    imageBytes = getBytesFromBufferedImage(image);
                    Produto p = new Produto();
                    ProdutoDAO dao = new ProdutoDAO();
                    p.setImagem(imageBytes);
                    p.setCodigo(codProdSelecionado);
                    dao.update(p, Operacao.IMAGEM);

                } catch (IOException ex) {
                    Logger.getLogger(FrmGestaoDeEstoque.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto!");
        }

    }//GEN-LAST:event_jbtSetImageActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        jbtPrintProdActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jbtAlDescActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jbtAlterarPrecoActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jbtSetImageActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        readJTable();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jbtTransferActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        jbtAddQtdActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        FrmRequisicao requisicao = new FrmRequisicao(this, true);
        requisicao.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void txtPrecoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoVendaActionPerformed
        jbtCadastrarActionPerformed(evt);
    }//GEN-LAST:event_txtPrecoVendaActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        FrmAuthentic au = new FrmAuthentic(this, true);
        au.setOperacao(Operacao.PROMOCAO);
        au.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);

            String novoCodigoProd = JOptionPane.showInputDialog(this, "Introduza o novo código do produto:", "Informação", JOptionPane.PLAIN_MESSAGE);

            ProdutoDAO prodDao = new ProdutoDAO();

            try {
                produto = prodDao.retornarProduto(codProdSelecionado);

                Produto produtoExiste = prodDao.procurarProdutoPeloCodigo(novoCodigoProd);
                if (produtoExiste != null) {
                    JOptionPane.showMessageDialog(this, "O código do produto já existe.", "Atenção", JOptionPane.ERROR_MESSAGE);
                } else {
                    produto.setCodigo(Integer.parseInt(novoCodigoProd));
                    FrmAuthentic au = new FrmAuthentic(this, true);
                    au.setOperacao(Operacao.CODIGO);
                    au.setProduto(produto);
                    au.setVisible(true);
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Preço inválido. Insira um número válido!", "Informação", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um produto para alterar o preco.");
        }

    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        if (jTProdutos.getSelectedRow() != -1) {
            int codProdSelecionado = (int) jTProdutos.getValueAt(jTProdutos.getSelectedRow(), 0);

            String novoType = JOptionPane.showInputDialog(this, "Introduza o novo tipo do produto:", "Informação", JOptionPane.PLAIN_MESSAGE);

            ProdutoDAO prodDao = new ProdutoDAO();
            try {
                produto = prodDao.retornarProduto(codProdSelecionado);
                if (produto != null) {
                    //String palavraFormatada = novoType.trim().toLowerCase();
                    if (!novoType.matches("unidade | peso")) {
                        produto.setType(novoType.toUpperCase());
                        FrmAuthentic au = new FrmAuthentic(this, true);
                        au.setOperacao(Operacao.TYPE);
                        au.setProduto(produto);
                        au.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Por favor, digite 'unidade' ou 'peso'!", "Atenção", JOptionPane.ERROR_MESSAGE);

                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Preço inválido. Insira um número válido!", "Informação", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGestaoDeEstoque.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrmGestaoDeEstoque().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jCoBoxProdType;
    private javax.swing.JLabel jLUserLogado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLimage;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTProdutos;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTprodImprimir;
    private javax.swing.JTable jTprodPrecos;
    private javax.swing.JButton jbtAddQtd;
    private javax.swing.JButton jbtAlDesc;
    private javax.swing.JButton jbtAlterarPreco;
    private javax.swing.JButton jbtCadastrar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtPrintProd;
    private javax.swing.JButton jbtSetImage;
    private javax.swing.JButton jbtTransfer;
    private javax.swing.JButton jbtprintPreco;
    private javax.swing.JTextField jtfCod;
    private javax.swing.JTextField jtfCodPrice;
    private javax.swing.JTextField txtCodProd;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtPrecoVenda;
    private javax.swing.JTextField txtProcurar;
    private javax.swing.JButton txtProcurarCodProd;
    private javax.swing.JTextField txtQtd;
    // End of variables declaration//GEN-END:variables
    /**
     * faz a leitura da tabela pelo código do produto para pesquisar
     *
     * @param cod código do produto
     */
    private void readJTableForCod(String cod) {
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        modelo.setNumRows(0);

        produtoDAO.readForCod(cod).stream().forEach((p) -> {
            modelo.addRow(new Object[]{
                p.getCodigo(),
                p.getDescricao(),
                p.getQtdLoja(),
                p.getQtdArmazem(),
                p.getPreco(),
                p.getPrecoVenda()
            });
        });
    }

    /**
     * Faz a leitura da tabela
     */
    public void readJTable() {
        DefaultTableModel modelo = (DefaultTableModel) jTProdutos.getModel();
        modelo.setNumRows(0);
        produtoDAO.read().stream().forEach((p) -> {
            modelo.addRow(new Object[]{
                p.getCodigo(),
                p.getDescricao(),
                p.getQtdLoja(),
                p.getQtdArmazem(),
                p.getPreco(),
                p.getPrecoVenda()
            });
        });
    }

    private void inserirProdTabelaPrecos(int quantidade) {
        String codProduto = jtfCodPrice.getText();
        int codigoProduto = Integer.parseInt(codProduto);
        produto = produtoDAO.retornarProduto(codigoProduto);
        DefaultTableModel modelo = (DefaultTableModel) jTprodPrecos.getModel();

        if (produto != null) {
            modelo.addRow(new Object[]{
                produto.getCodigo(),
                produto.getDescricao(),
                quantidade,
                produto.getPrecoVenda()
            });
        }
    }
}
